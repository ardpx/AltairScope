@model List<AltairScope.Models.PropertyViewModel>
@using GridMvc.Html

@{
    ViewBag.Title = "Property Grid";
}

<style type="text/css">
.content-wrapper {
	max-width: 1540px !important;
} 
</style>

<h2>@Html.ActionLink("Property List", "Index")</h2>
@Html.ActionLink("Monitor List", "Index", new {show = "underMonitor"}) | @Html.ActionLink("In Progress", "Index", new {show = "inProgress"}) | @Html.ActionLink("Match Criteria", "Index", new {show = "good"}) |

@Ajax.ActionLink("Re-evaluate All", "ReEvaluateAll", "Property",
                new AjaxOptions {
                    HttpMethod = "POST",
                })

@Html.Grid(Model).Columns(column =>
	{
		column.Add(p => p.DecisionStatus).Titled("Decision").Filterable(true);
		column.Add(p => p.Address).Titled("Address");
		column.Add(p => p.Neighbourhood).Titled("Neighbourhood");
		column.Add(p => p.SaleType).Titled("Type").Filterable(true);
		column.Add(p => p.Availability).Titled("Availibility");
		column.Add(p => p.Score).Titled("Score").Sortable(true);
		column.Add(p => p.Price).Titled("Price").Format("{0:c0}").Sortable(true);
		column.Add(p => p.Fmv_Mean).Titled("FMV").Format("{0:c0}");
		column.Add(p => p.OfferPrice).Titled("Offer").Format("{0:c0}");
		column.Add(p => p.Rent_Mean).Titled("Rental").Format("{0:c0}");
		column.Add(p => p.Return_Rate_Mean).Titled("Return %").Format("{0:0.00%}").Sortable(true);
		column.Add(p => p.Cash_Flow_Mean).Titled("Cash Flow").Format("{0:c0}").Sortable(true);
		column.Add(p => p.Remark).Titled("Remark");
		column.Add(p => p.ListingDaysCount).Titled("Days").Sortable(true);
		column.Add(p => p.Id).Titled("Actions")
							 .Sanitized(false).Encoded(false)
							 .RenderValueAs(p => Html.ActionLink("Edit", "Edit", "Property", new { Id = p.Id }, null) + "" +
																								   Html.ActionLink("View", "View", "Property", new { Id = p.Id }, null) + "" +
																								   Html.ActionLink("Status", "ChangeStatus", "Property", new { Id = p.Id }, null) + "" +
																								   Html.ActionLink("Trend", "Trend", "Property", new { Id = p.Id }, null));
	}).WithPaging(40).WithMultipleFilters()