@model AltairScope.Models.EditPropertyViewModel

@{
    ViewBag.Title = "Edit";
}

<h2>Edit Property</h2>
<div>
    @Html.ActionLink("View", "View" , new {id = Model.Id})
	@Html.ActionLink("Status", "ChangeStatus", new {id = Model.Id})
</div>
<br>

@using (Html.BeginForm("Edit", "Property", FormMethod.Post)) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>EditPropertyViewModel</legend>

        @Html.HiddenFor(model => model.Id)

        <div class="editor-label">
            @Html.LabelFor(model => model.Address)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.Address)
            @Html.ValidationMessageFor(model => model.Address)
        </div>

		<div class="editor-label">
            @Html.LabelFor(model => model.ListingDaysCount)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.ListingDaysCount)
            @Html.ValidationMessageFor(model => model.ListingDaysCount)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Neighbourhood)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.Neighbourhood)
            @Html.ValidationMessageFor(model => model.Neighbourhood)
        </div>

		<div class="editor-label">
            @Html.LabelFor(model => model.SaleType)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.SaleType, Model.SaleType)
            @Html.ValidationMessageFor(model => model.SaleType)
        </div>

		<div class="editor-label">
            @Html.LabelFor(model => model.Availability)
        </div>
        <div class="editor-field">
            @Html.EnumDropDownListFor(model => model.Availability, Model.Availability)
            @Html.ValidationMessageFor(model => model.Availability)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url_Redfin)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.Url_Redfin)
            @Html.ValidationMessageFor(model => model.Url_Redfin) 
			@if (!string.IsNullOrEmpty(@Model.Url_Redfin))
			{
			<a href="@Model.Url_Redfin">Link</a>
			}
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url_Zillow)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.Url_Zillow)
            @Html.ValidationMessageFor(model => model.Url_Zillow)
			@if (!string.IsNullOrEmpty(@Model.Url_Zillow))
			{
			<a href="@Model.Url_Zillow">Link</a>
			}
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Url_Ziprealty)
        </div>
        <div class="editor-field wide-field">
            @Html.EditorFor(model => model.Url_Ziprealty)
            @Html.ValidationMessageFor(model => model.Url_Ziprealty)
			@if (!string.IsNullOrEmpty(@Model.Url_Ziprealty))
			{
			<a href="@Model.Url_Ziprealty">Link</a>
			}
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Bed)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Bed)
            @Html.ValidationMessageFor(model => model.Bed)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SquareFoot)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SquareFoot)
            @Html.ValidationMessageFor(model => model.SquareFoot)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Price)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Price)
            @Html.ValidationMessageFor(model => model.Price)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Hoa)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Hoa)
            @Html.ValidationMessageFor(model => model.Hoa)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TaxableTax)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TaxableTax)
            @Html.ValidationMessageFor(model => model.TaxableTax)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TaxableAdditions)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TaxableAdditions)
            @Html.ValidationMessageFor(model => model.TaxableAdditions)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TaxableTotal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TaxableTotal)
            @Html.ValidationMessageFor(model => model.TaxableTotal)
        </div>
        <div class="editor-label">
            @Html.LabelFor(model => model.FMV_Zestimate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FMV_Zestimate)
            @Html.ValidationMessageFor(model => model.FMV_Zestimate)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FMV_Smartzip)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FMV_Smartzip)
            @Html.ValidationMessageFor(model => model.FMV_Smartzip)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.FMV_Eappraisal)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FMV_Eappraisal)
            @Html.ValidationMessageFor(model => model.FMV_Eappraisal)
        </div>

		<div class="editor-label">
            @Html.LabelFor(model => model.FMV_Homeseeker)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.FMV_Homeseeker)
            @Html.ValidationMessageFor(model => model.FMV_Homeseeker)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rental_Zrent)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rental_Zrent)
            @Html.ValidationMessageFor(model => model.Rental_Zrent)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rental_Rentometer)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rental_Rentometer)
            @Html.ValidationMessageFor(model => model.Rental_Rentometer)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Rental_Zilpy)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Rental_Zilpy)
            @Html.ValidationMessageFor(model => model.Rental_Zilpy)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.ZillowGrowthRate)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ZillowGrowthRate)
            @Html.ValidationMessageFor(model => model.ZillowGrowthRate)
        </div>

        <p>
            <input type="submit" value="Save" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
	<script>
		var checkNeighbourhoodUrl = "@Url.Action("Check", "Neighbourhood")";
		$(document).ready(function () {
			$("#checkNeighbourhood").click(function () {
				$("#checkNeighbourhood").text("Checking");
				var neighbourhoodName = $("#Neighbourhood").val();
				var postData = { "name": neighbourhoodName };
				$.ajax({
					type: "GET",
					url: checkNeighbourhoodUrl,
					data: postData,
					dataType: "json"
				}).done(function (data) {
					$("#Neighbourhood").val(data.id);
					$("#neighbourhoodName").text(neighbourhoodName);
					$("#checkNeighbourhood").text("Check");
				}).error(function () {
					$("#checkNeighbourhood").text("Check");
					alert("no matched neighbourhood");
				});
			});

			$("#Address").on('blur', function () {
				//var address = $("#Address").val();
				alert("address");
			});
		});
	</script>
}
